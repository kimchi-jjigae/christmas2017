@file-data/datatables.hpp@
#pragma once
//!!!=== NOTE: autogenerated file, any changes might get overwritten at any point ===!!!

#include <memory>

namespace dpx
{
template<typename DataType, bool externalId>
struct DataTable;
}

@foreach-table@
struct $table-Name$;
using T$table-Name$ = dpx::DataTable<$table-Name$, $external-id$>;
@end@

struct GameTables
{
@foreach-table@
    std::unique_ptr<T$table-Name$> t$table-Name$;
@end@
};

void instantiateGameTables(GameTables& tables);

template<typename Functor>
void forEachTable(Functor f, GameTables& tables)
{
@foreach-table@
   f(*tables.t$table-Name$); 
@end@
}
@end@

@file-data/datatables.cpp@
//!!!=== NOTE: autogenerated file, any changes might get overwritten at any point ===!!!

#include "datatables.hpp"

@foreach-table@
#include <data/$table-name$.hpp>
@end@

void instantiateGameTables(GameTables& tables)
{
@foreach-table@
    tables.t$table-Name$ = std::make_unique<T$table-Name$>("$Table name$", "$description$");
@end@
}
@end@
