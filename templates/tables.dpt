@file-data/alltypes.hpp@
#pragma once
//!!!=== NOTE: autogenerated file, any changes might get overwritten at any point ===!!!

@foreach-table@
#include <data/$table-name$.hpp>
@end@
@end@
@foreach-table@
@file-data/$table-name$.hpp@
#pragma once
//!!!=== NOTE: autogenerated file, any changes might get overwritten at any point ===!!!

#include <dpx/tables.hpp>
#include <dpx/get.hpp>
#include <dpx/set.hpp>
#include <dpx/has.hpp>
#include <dpx/find.hpp>
#include <dpx/foreach.hpp>
#include <dpx/clear.hpp>
#include <dpx/erase.hpp>
@foreach-dependency@
$dependency$
@end@

@if-is_child@
#include "$parent-name$.hpp"
@end@

//$Table name$ - $description$
struct $table-Name$
{
@if-is_parent@
    enum Type { _Base, @foreach-child@$child-Name$, @end@};
    Type $table-lName$Type;
@end@
@if-is_child@
    static constexpr $parent-Name$::Type $parent-lName$type = $parent-Name$::$table-Name$;
@end@
@foreach-column@
    $column-output$
@end@
};

using T$table-Name$ = dpx::DataTable<$table-Name$, $external-id$>;

@end@
@end@
