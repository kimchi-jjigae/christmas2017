#pragma once
//autogenerated file/ do not edit

#include <dpx/tables.hpp>
#include <memory>
#include <thero/optional.hpp>
#include <fea/rendering/texture.hpp>
#include <vector>
#include <spr/entitystates/stateexecutor.hpp>
#include <fea/rendering/color.hpp>
#include <dpx/tableid.hpp>
#include <string>
#include <spr/physics/collisiontype.hpp>
#include <spr/glm.hpp>
#include <spr/physics/aabb.hpp>
#include <spr/hash/stringhash.hpp>
#include <cstdint>
#include <spr/orientation/orientation.hpp>

#include <spr/physics/collisionexecutor.hpp>
#include <spr/entitystates/statecontext.hpp>
#include <unordered_map>
#include <cstring>
#include <spr/entitystates/duration.hpp>
#include "spriteaddutil.hpp"

namespace spr
{
//Animated Sprite - A sprite with animation capabilities
struct AnimatedSprite
{
    static constexpr Sprite::Type type = Sprite::AnimatedSprite;
    int32_t animation;
    int32_t animationClock;
};

using TAnimatedSprite = dpx::DataTable<AnimatedSprite, true>;
}

