@foreach-table@
@if-is_parent@
@file-data/$table-name$addutil.hpp@
//autogenerated file, do not edit
#pragma once
#include <spr/data/tables.hpp>
#include "$table-name$.hpp"

namespace spr
{
void erase$table-Name$(int32_t id, Tables& tables);
@foreach-child@
int32_t insert$table-Name$(struct $table-Name$ $table-name$, struct $child-Name$ $child-name$, Tables& tables);
@end@
}
@end@
@file-data/$table-name$addutil.cpp@
#include "$table-name$addutil.hpp"
@foreach-child@
#include <spr/data/$child-name$.hpp>
@end@

namespace spr
{
@foreach-child@
int32_t insert$table-Name$(struct $table-Name$ $table-name$, $child-Name$ $child-name$, Tables& tables)
{
    $table-name$.type = $table-Name$::$child-Name$;
    int32_t newId = insert(std::move($table-name$), *tables.t$table-Name$).id;
    insert(newId, std::move($child-name$), *tables.t$child-Name$);

    return newId;
}
@end@

void erase$table-Name$(int32_t id, Tables& tables)
{
    erase(id, *tables.t$table-Name$);
@foreach-child@
    erase(id, *tables.t$child-Name$);
@end@
}
}
@end@
@end@
@end@
